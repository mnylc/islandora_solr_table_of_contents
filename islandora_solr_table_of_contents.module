<?php

/**
 * @file
 * Table of Contents module for Islandora.
 */

define('ISLANDORA_SOLR_TABLE_OF_CONTENTS_MANAGE_TABLE_OF_CONTENTS', 'manage islandora solr table of contents');

/**
 * Implements hook_menu().
 */
function islandora_solr_table_of_contents_menu() {
  return array(
    'islandora_solr_table_of_contents/%islandora_object' => array(
      'page callback' => 'islandora_solr_table_of_contents_get_jstree_list',
      'page arguments' => array(1),
      'access callback' => 'islandora_object_access',
      'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 1),
      'type' => MENU_CALLBACK,
      'file' => 'includes/callback.inc',
      'load arguments' => array(1),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function islandora_solr_table_of_contents_block_info() {
  return array(
    'islandora_solr_table_of_contents' => array(
      'info' => t('Islandora Solr Table of Contents'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function islandora_solr_table_of_contents_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'islandora_solr_table_of_contents':
      $object = menu_get_object('islandora_object', 2);
      if ($object) {
        $content_models = variable_get('islandora_solr_table_of_contents_content_models', islandora_solr_table_of_contents_get_default_configuration());
        $valid_models = array_intersect(array_keys($content_models), $object->models);
        if (!empty($valid_models)) {
          module_load_include('inc', 'islandora_solr_table_of_contents', 'includes/block');
          $start_object = islandora_solr_table_of_contents_refresh_block_start_point($object);
          $block['subject'] = t('@label Table of Contents', array('@label' => $start_object->label));
          $block['content'] = islandora_solr_table_of_contents_table_of_contents($start_object);
          return $block;
        }
      }
      break;

    default:
      break;
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 */
function islandora_solr_table_of_contents_block_configure($delta) {
  switch ($delta) {
    case 'islandora_solr_table_of_contents':
      module_load_include('inc', 'islandora_solr_table_of_contents', 'includes/block');
      return islandora_solr_table_of_contents_configuration_form();

    default:
      break;
  }
}

/**
 * Implements hook_block_save().
 */
function islandora_solr_table_of_contents_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'islandora_solr_table_of_contents':
      $content_models = array();
      foreach ($edit['islandora_solr_table_of_contents_content_models']['rows'] as $pid => $row) {
        if ($row['selected']) {
          $content_models[$pid] = array();
          if ($row['solr_field'] !== '') {
            $content_models[$pid]['solr_field'] = $row['solr_field'];
          }
          if ($row['sort_field'] !== '') {
            $content_models[$pid]['sort_field'] = $row['sort_field'];
          }
        }
      }
      variable_set('islandora_solr_table_of_contents_content_models', $content_models);
      variable_set('islandora_solr_table_of_contents_save_state', $edit['save_state']);
      variable_set('islandora_solr_table_of_contents_root_node', $edit['save_state'] ? $edit['root_node'] : NULL);
      variable_set('islandora_solr_table_of_contents_max_objects', $edit['max_objects']);
      break;

    default:
      break;
  }
}

/**
 * Implements hook_permission().
 */
function islandora_solr_table_of_contents_permission() {
  return array(
    ISLANDORA_SOLR_TABLE_OF_CONTENTS_MANAGE_TABLE_OF_CONTENTS => array(
      'title' => t('Manage Solr Table of Contents'),
      'description' => t('Allows for modifying the custom Islandora Solr Table of Contents block settings, like content models and Solr fields.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_solr_table_of_contents_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_solr_table_of_contents_block_management_table' => array(
      'file' => 'theme/theme.inc',
      'render element' => 'table',
    ),
  );
}

/**
 * Implements hook_islandora_solr_table_of_contents_default_configuration().
 *
 * Default configuration for content models.
 */
function islandora_solr_table_of_contents_islandora_solr_table_of_contents_default_configuration() {
  return array(
    'islandora:collectionCModel' => array(
      'solr_field' => 'RELS_EXT_isMemberOfCollection_uri_ms',
    ),
    'islandora:bookCModel' => array(
      'solr_field' => 'RELS_EXT_isPageOf_uri_ms',
      'sort_field' => 'RELS_EXT_isPageNumber_literal_s',
    ),
    'islandora:newspaperCModel' => array(
      'solr_field' => 'RELS_EXT_isMemberOf_uri_ms',
      'sort_field' => 'RELS_EXT_isSequenceNumber_literal_s',
    ),
    'islandora:newspaperIssueCModel' => array(
      'solr_field' => 'RELS_EXT_isPageOf_uri_ms',
      'sort_field' => 'RELS_EXT_isPageNumber_literal_s',
    ),
    'islandora:compoundCModel' => array(
      'solr_field' => 'RELS_EXT_isConstituentOf_uri_ms',
      'sort_field' => 'RELS_EXT_isSequenceNumberOf%pid_literal_s',
    ),
  );
}

/**
 * Assemble the default content models configuration.
 *
 * Does so from hook_islandora_solr_table_of_contents_default_configuration()
 * and the associated alter; check islandora_solr_table_of_contents.api.php
 * for more details.
 *
 * @return array
 *   The compiled default config.
 */
function islandora_solr_table_of_contents_get_default_configuration() {
  $config = module_invoke_all('islandora_solr_table_of_contents_default_configuration');
  drupal_alter('islandora_solr_table_of_contents_default_configuration', $config);
  return $config;
}
